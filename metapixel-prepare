#!/usr/bin/perl

# metapixel-prepare --- prepare images for metapixeling.

# Copyright (C) 1999-2004 Mark Probst
# Copyright (C) 2004 Jake Di Toro

# Authors: Mark Probst <schani@complang.tuwien.ac.at>
#          Jake Di Toro <karrde@viluppo.net>
# Maintainer: Mark Probst <schani@complang.tuwien.ac.at>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, you can either send email to this
# program's maintainer or write to: The Free Software Foundation,
# Inc.; 675 Massachusetts Avenue; Cambridge, MA 02139, USA.

use strict;

use Getopt::Long;
use File::Basename;
use IO::Handle;

sub disambiguate_filename {
    my $filename = shift;
    my $suffix = shift;

    return "$filename$suffix" if !-e "$filename$suffix";

    my $ctr = 1;

    while (-e "$filename.$ctr$suffix") {
	++$ctr;
    }

    return "$filename.$ctr$suffix";
}

sub usage {
    print STDERR "Usage: $0 [OPTION]... <srcdir> <destdir>

Prepares all images in <srcdir> for use as small images in
photomosaics. The scaled versions and the table file are
stored in <destdir>.

  --help             display this help and exit
  --width=WIDTH      specify width of small images
  --height=HEIGHT    specify height of small images
  -r, --recurse      recurse through directories
  --debug            print out debugging info
";
    exit(1);
}

my $width;
my $height;
my $do_recurse;
my $DEBUG;


if (!GetOptions("help", \&usage,
		"width=i", \$width,
		"height=i", \$height,
		"recurse|r", \$do_recurse,
		"debug", \$DEBUG)) {
    usage();
}

my $opts;

if ($width) {
    $opts = "--width=$width";
}
if ($height) {
    $opts .= " --height=$height";
}

if ($#ARGV != 1) {
    usage();
}

my ($srcdir, $destdir) = @ARGV;

if (! -d $srcdir || ! -r $srcdir) {
    print "$0: directory $srcdir does not exist or is unreadable\n";
    exit(1);
}

if (! -d $destdir ) {
    print "$0: directory $destdir does not exist\n";
    exit(1);
}

STDOUT->autoflush(1);

sub process_dir {
    my $pdir = shift;
    my $do_recurse = shift;

    print "Processing dir: $pdir\n" if $DEBUG;

    foreach my $filename (glob("\"$pdir/*\"")) {
	print "Testing file: $filename\n" if $DEBUG;

	if (-f $filename && -r $filename) {
	    my ($name, $path, $suffix) = fileparse($filename);

	    print "Processing: $filename\n" if $DEBUG;

	    my $thumbname = disambiguate_filename("$destdir/$name$suffix", ".png");
	    
	    `metapixel $opts --prepare "$filename" "$thumbname" "$destdir/tables.mxt"`;
	    if ($? != 0) {
		print "Error running metapixel - skipping file $filename\n"
	    }
	    else
	    {
		print "." if !$DEBUG;
	    }
	}
	elsif (-d $filename && -r $filename && $do_recurse) {
	    process_dir($filename, $do_recurse);
	}
    }
}

process_dir($srcdir, $do_recurse);
