Metapixel 0.7
=============

Metapixel is a program for generating photomosaics. It can generate
classical photomosaics, in which the source image is viewed as a
matrix of equally sized rectangles for each of which a matching image
is substitued, as well as collage-style photomosaics, in which
rectangular parts of the source image at arbitrary positions (i.e. not
aligned to a matrix) are substituted by matching images.


Installation
------------

In order to compile Metapixel, you need libpng and libjpeg. To run the
script for preparing constituent images, you will additionally need
Perl. Most Linux distributions contain these software packages.

Edit the first line of Makefile if you want to install Metapixel
somewhere else than /usr/local. Then, type

  make

If everything compiled fine, become root and type

  make install


Preparing images
----------------

Before mosaics can be created the constituent images need to be
preprocessed. Preparing an image does two things. Firstly, it computes
various coefficients by which the image can be matched against a part
of a source image. Secondly, the image is scaled to a smaller
size. Usually this will be the size you intend to use for it in the
target image, but it can be any arbitrary size. It makes sense to
scale your images to the maximum size that you will use for
constituent images. That way, no information gets lost. The default
size is 64x64 pixels.

To simplify the task of preparing images, the Perl script
'metapixel-prepare' is included in the distribution. It must be called
with two parameters: the name of directory in which the original
images are stored and the name of the directory which the scaled down
images and the table file should be stored. It also accepts parameters
specifying the size of the scaled down images. Just call it - it
prints out usage information.

Note that you have to do the preparation step again for version 0.6,
since the format is not compatible with earlier versions.


Creating photomosaics
---------------------

Input images for mosaics can have arbitrary sizes. Should you want the
created mosaic to be of a different size than the input image, use the
--scale option. It scales the input image uniformly in both directions
(i.e. obeying the aspect ratio). If the width or height of the input
image after scaling are not multiples of the width and height of the
constituent images, the input image is further scaled up to the
smallest size (larger than the input image) that fulfills this
property, possibly changing the aspect ratio a bit. This does not
apply to collages, however. The sizes of their source images after
scaling are always left untouched.

Metapixel produces output images in the PNG format. In order to create
a classic photomosaic for the image input.jpg and write the output to
output.png with constituent images stored in the directory images, use
the following command line:

  metapixel --metapixel input.jpg output.png <images/tables

To create a collage use

  metapixel --collage --metapixel input.jpg output.png <images/tables

Using the -y, -i and -q options you can change the weights for each
of the color channels. For example, to match only luminance,
completely disregarding chrominance, use

  metapixel -i0 -q0 --metapixel input.jpg output.png <images/tables

The default weight for each of the channels is 1.

The --distance option lets you specify the minimal distance between
two occurences of the same constituent image in the target image for
classical photomosaics. The default distance is 0, which means that it
is allowed for one image to be placed in two adjacent elements in the
matrix. Distance 1 means that there must be at least one other image
between two occurences of the same image. Note that Metapixel is
forces to select non-optimal matches for distances greater 0.

Using the --cheat option you can specify the percentage by which the
resulting photomosaic should be overlayed by the original image. The
default is 0, i.e. the photomosaic is not overlayed at all. A
percentage of 100 yields, not surprisingly, the original image. A
percentage of 30 makes the photomosaic appear noticably better but is
yet small enough to go unnoticed without close inspection in most
circumstances.

As of version 0.6, Metapixel implements two different matching
algorithms. The new metric, which is a trivial distance function,
seems to give better results while not being slower than the old
wavelet metric. The metric can be chosen using the --metric
option. The default is the new subpixel metric.

Note that Metapixel uses ridiculous amounts of main memory for collage
mosaics. To create a collage photomosaics of size 2048x2048 your
machine should at least have 64MBytes RAM.


The matching algorithm
----------------------

The algorithm that does the image matching via wavelets is described
in the paper 'Fast Multiresolution Image Querying' by Charles
E. Jacobs, Adam Finkelstein and David H. Salesin.

The new subpixel metric is very trivial. I suggest you consult the
source if you are interested in it. The matching function is
subpixel_compare().


Licence and Availability
------------------------

Metapixel is free software distributed under the terms of the GPL. Due
to the inclusion of Paul Heckbert's image scaling code, the additional
restriction is that it may only be used for peaceful and and nonprofit
purposes. I have already emailed him regarding the removal of this
restriction.

The source of Metapixel is available at the Metapixel homepage at

  http://www.complang.tuwien.ac.at/~schani/metapixel/


---
Mark Probst
schani@complang.tuwien.ac.at
